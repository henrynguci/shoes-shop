name: main-bot

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  quality_checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Root Dependencies
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          npm ci
          npm install --save-dev husky lint-staged prettier
          npx husky install

      - name: Cache Frontend Dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}

      - name: Cache Backend Dependencies
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      - name: Check code formatting
        run: |
          echo "Checking source code formatting..."
          npx prettier --check "{frontend,backend}/src/**/*.{js,jsx,ts,tsx}" || (
            echo "Formatting code..."
            npx prettier --write "{frontend,backend}/src/**/*.{js,jsx,ts,tsx}"
          )

      - name: Run Frontend ESLint
        working-directory: ./frontend
        run: |
          if [ -f "package.json" ] && grep -q "\"lint\":" "package.json"; then
            npm run lint
          else
            echo "Skipping frontend lint - script not found"
          fi

      - name: Run Backend ESLint
        working-directory: ./backend
        run: |
          if [ -f "package.json" ] && grep -q "\"lint\":" "package.json"; then
            npm run lint
          else
            echo "Skipping backend lint - script not found"
          fi

      # - name: Run Frontend Tests
      #   working-directory: ./frontend
      #   run: npm test -- --watchAll=false --passWithNoTests

      # - name: Run Backend Tests
      #   working-directory: ./backend
      #   run: npm test --passWithNoTests

      # - name: Check Frontend Security
      #   working-directory: ./frontend
      #   run: npm audit || true

      # - name: Check Backend Security
      #   working-directory: ./backend
      #   run: npm audit || true

  build_check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: quality_checks

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache Frontend Build
        uses: actions/cache@v3
        with:
          path: frontend/build
          key: ${{ runner.os }}-frontend-build-${{ github.sha }}

      - name: Cache Backend Build
        uses: actions/cache@v3
        with:
          path: backend/dist
          key: ${{ runner.os }}-backend-build-${{ github.sha }}

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Build backend
        working-directory: ./backend
        run: |
          npm ci
          npm run build
